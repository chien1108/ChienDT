@page "/Users/Login"
@inject IAuthenticationService Authentication
@inject NavigationManager NavManager
@inject IToastService ToastService
@using Blazored.Toast.Configuration

<BlazoredToasts Position="ToastPosition.BottomRight" Timeout="2" />
<div class="d-flex justify-content-center" id="componentLogin">
    <div class="card" style="width : 800px">
        <div class="card-body">
            <h2 class="card-title">Login</h2>
            <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="username">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="LoginModel.Username"></InputText>
                    <ValidationMessage For="()=> LoginModel.Username"></ValidationMessage>
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="LoginModel.Password"></InputText>
                    <ValidationMessage For="()=> LoginModel.Password"></ValidationMessage>
                </div>
                <button type="submit" class="btn btn-success mt-4">Login</button>
            </EditForm>
        </div>
    </div>
</div>


@code {
    AccountLoginDto LoginModel = new AccountLoginDto();

    public async Task HandleLogin()
    {
        try
        {
            var response = await Authentication.AuthenticateAsync(LoginModel);

            if (response)
            {
                NavManager.NavigateTo("/");
            }

            ToastService.ShowError("Invalid Credentials, Please Try Again");
            //message = "Invalid Credentials, Please Try Again";
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {

            }

            ToastService.ShowError(ex.StackTrace.ToString());
        }
    }
}
